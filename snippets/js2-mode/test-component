# -*- mode: snippet; require-final-newline: nil -*-
# name: React component test
# key: testc
# expand-env: ((yas/indent-line 'fixed))
# --
import R from "ramda";
import React from "react";
import { shallow } from "enzyme";
import rewire from "utils/rewire";
import nodeLike from "utils/node-like";

import { Component, __RewireAPI__ } from "components/$1";

import chaiEnzyme from "chai-enzyme";
chai.use(chaiEnzyme());

let subject;
let rewireSandbox;

function doRewire() {
  rewireSandbox.stub({});
}

beforeEach(() => {
  rewireSandbox = rewire(__RewireAPI__);
});

afterEach(() => {
  rewireSandbox.restore();
});

describe("$1", () => {
  let props;
  let reactContext;

  beforeEach(() => {
    props = {};
    reactContext = {};

    subject = R.memoize(() => {
      doRewire();
      return shallow(
        <Component { ...props }/>,
        { context: reactContext }
      );
    });
  });

  it("renders without errors", () => {
    expect(subject()).to.be.present();
  });
});
